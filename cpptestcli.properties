# === LICENSE ===

# === LOCAL LICENSE ===
# Enables local license - be sure to specify password.
cpptest.license.use_network=false

# Specifies password for the local license. 
#cpptest.license.local.password=TMX_0FEC99C998DA44EF3E94F46C6FC8783EAD6F4AB750684B41FBF54F1C3E54D12A9F900F7CF8D9540FFC698303A5B31E8A492EE7BF03116395D2DF053E6B1E15EB_962D7F3A2CE13CB8FC2DB3BACC0F9E16EB29AD4C44AA3DA1B318279F41F0DF00B1A6C353715B5C9AC40EC9ECAD1F9254BDF36BFD16B87E6248185C5587FA6ADC


# === NETWORK LICENSE ===
# Enables network license - be sure to configure DTP server settings.
#cpptest.license.use_network=true

# Specifies whether network license will be retrieved from DTP License Service
# or License Server:
#    dtp: use DTP License Service
#    ls: use License Server
#cpptest.license.network.type=ls
 
# Specifies type of the network license (edition). Supported editions: server_edition, server_compliance_edition
#cpptest.license.network.edition=server_edition

# Enables specific list of license features.
#cpptest.license.network.edition=custom_edition
#cpptest.license.custom_edition_features=C++test,Static Analysis,Flow Analysis,Unit Test,Coverage,Automation,DTP Publish,Desktop Command Line,AUTOSAR Rules,CWE Rules,HIC++ Rules,JSF Rules,MISRA Rules,MISRA C 2012 Rules,OWASP Rules,Security Rules,SEI CERT C Rules,SEI CERT C++ Rules

# === DTP SERVER SETTINGS ===

# Specifies host name of the DTP server.
#dtp.server=localhost

# Specifies port number of the DTP server.
# Commonly used values are 443 and 8443.
#dtp.port=8443

# Specifies user name for DTP server authentication.
#dtp.user=admin

# Specifies password for DTP server authentication - use cpptestcli -encodepass <PASSWORD> to encode the password, if needed.
#dtp.password=admin

# Specifies name of the DTP project - this settings is optional. 
#dtp.project=[DTP Project Name]

# Enables sharing data using Team Server - be sure to configure DTP server settings. 
#dtp.share.enabled=true

# Enables using common Parasoft Test settings stored on the DTP server. 
#dtp.autoconfig=true


# === CONFIGURATION ===

# Specifies default test configuration for the analysis.
# Used when -config switch is not specified in the command line.
# cpptest.configuration=builtin://Recommended Rules


# === COMPILER ===

# Specifies default compiler configuration for the analysis.
# Used when -compiler switch is not specified in the command line.
#cpptest.compiler.family=[compiler identifier]


# === REPORTING ===

# Enables reporting test results to DTP server - be sure to configure DTP server settings.
#report.dtp.publish=true

# Specifies a build identifier used to label results. It may be unique for each build
# but may also label more than one test sessions that were executed during a specified build.
#build.id=${dtp_project}-yyyy-MM-dd

# Specifies optional tag used to mark results from a test session.
# The tag is an unique identifier of the specific analysis type made on specific code module.
# The following variables can be used to create unique tag:
#   ${config_name}
#   ${project_module}
#   ${scontrol_branch}
#   ${exec_env}
#session.tag=[tag] 

# Specifies a set of tags that will be used to create coverage images in DTP server.
# Coverage images allow you to track different types of coverage, such as coverage for unit, functional, manual tests and others.
# There is a set of predefined tags that will be automatically recognized by DTP, see the examples below.
# You can also specify other tags that will be used to create coverage images.
#report.coverage.images=${dtp_project}
#report.coverage.images=${dtp_project};${dtp_project}_Unit Test
#report.coverage.images=${dtp_project};${dtp_project}_Functional Test
#report.coverage.images=${dtp_project};${dtp_project}_Manual Test


# === HTML / PDF REPORTS ===

# Determines whether the report includes an overview of the number and type of tasks assigned to each team member. 
#report.authors_details=true

# Determines whether the report includes an overview of the files that were checked or tests executed during testing.
#report.contexts_details=true

# Specifies whether the report shows requirements, defects, tasks, and feature requests that are associated with a test.
#report.associations=true


# === EMAILS ===

# Enables reporting test results by e-mail.
#report.mail.enabled=true

# Specifies mail server.
#report.mail.server=[server]

# Specifies mail domain.
#report.mail.domain=[domain]

# Specifies default sender of the e-mails.
#report.mail.from=[email|user_name] 

# Specifies default subject of the e-mails. 
#report.mail.subject=[subject] 


# === SCOPE AND AUTHORSHIP ===

# Enables code authorship computation, based on a data from a supported SCM system.
#scope.scontrol=true

# Enables source control integration on DTP server:
#    filtering by branches, viewing revisions, browsing code on the DTP server.
# Enables paths for locations, revision, branches and comments for quality tasks.
#    off: no information is reported
#    min: repositories, file paths and revisions are reported
#    full: also task revisions and comments are reported
#report.scontrol=min

# Use cpptestcli -encodepass <PASSWORD> to encode the passwords of source control users.

# === SUBVERSION ===
#scontrol.rep1.type=svn
#scontrol.rep1.svn.url=https\://foo.bar.com/svn
#scontrol.rep1.svn.login=[user name]
#scontrol.rep1.svn.password=[password]
#scontrol.svn.exec=C\:\\Program Files\\svn\\bin\\svn.exe

# === GIT ===
#scontrol.rep1.type=git
#scontrol.rep1.git.url=http\://foo.bar.com\:7990/git
#scontrol.rep1.git.branch=master
#scontrol.rep1.git.workspace=C\:\\workspace
#scontrol.git.exec=C\:\\Program Files (x86)\\Git\\bin\\git.exe

# === TEAM FOUNDATION SERVER ===
#scontrol.rep1.type=tfs
#scontrol.rep1.tfs.url=http\://foo.bar.com\:8080/tfs
#scontrol.rep1.tfs.login=[user name]
#scontrol.rep1.tfs.password=[password]

# === CVS ===
#scontrol.rep1.type=cvs
#scontrol.rep1.cvs.root=\:pserver\:[user name]@foo.bar.com\:/home/repo/cvs
#scontrol.rep1.cvs.pass=[password]

# See manual for configuring other types of source-control systems.


# === FILE ENCODING  ===

# Specifies custom file-encoding - system encoding will be used as a default.
#file.encoding.mode=user
#file.encoding.name=UTF-8


# === FLOWANALYSIS: REUSE SERVER DATA ON DESKTOP: SERVER SETTINGS ===

#flowanalysis.storage.enabled=true
#flowanalysis.storage.path.mappings=WORKING_DIR=.;[additional_mappings]


# === FLOWANALYSIS: REUSE SERVER DATA ON DESKTOP: DESKTOP SETTINGS ===

#flowanalysis.storage.enabled=true
#flowanalysis.storage.path.mappings=WORKING_DIR=.;[additional_mappings]
#flowanalysis.storage.additional.locations=[server_cfg_dir]
#flowanalysis.storage.read.additional.data=*
#flowanalysis.storage.uptodate.check.dirs=.
